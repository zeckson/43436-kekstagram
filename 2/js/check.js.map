{"version":3,"sources":["webpack:///webpack/bootstrap 01ce5c2d1ebb02c6cc58","webpack:///./src/js/check.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,GAAE;AACF;;AAEA,GAAE;AACF;AACA;AACA,OAAM;;AAEN;AACA,kBAAiB,cAAc;AAC/B;AACA;;AAEA;;AAEA,GAAE;AACF;AACA,GAAE;AACF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oF","file":"js/check.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 01ce5c2d1ebb02c6cc58\n **/","function getMessage(a, b) {\n\n\tif (a = Boolean) {\n\t\tconsole.info('Переданное GIF-изображение анимировано и содержит [b] кадров');\n\t\tif (false) {\n\t\t\tconsole.info('Переданное GIF-изображение не анимировано');\n\t\t}\n\n\t} else if (a = number) {\n\t\tconsole.info('Переданное SVG-изображение содержит ' + a + '  объектов и ' + (b * 4) + ' атрибутов');\n\n\t} else if (Array.isArray(a)) {\n\t\t// var amountOfRedPoints = a.reduce(function(sum, current) {\n\t\t// \treturn sum + current;\n\t\t// }, 0);\n\n\t\tvar amountOfRedPoints = 0;\n\t\tfor (var i = 0; i < a.length; i++) {\n\t\t\tamountOfRedPoints = amountOfRedPoints + parseInt(arr[i]);\n\t\t}\n\n\t\tconsole.info('Количество красных точек во всех строчках изображения: ' + amountOfRedPoints);\n\n\t} else if (Array.isArray(a) && Array.isArray(b)) {\n\t\tconsole.info('Общая площадь артефактов сжатия: ' + artifactsSquare + ' пикселей');\n\t} else {\n\t\tconsole.info('Переданы некорректные данные');\n\t}\n}\n\n// Если первый аргумент, a, имеет тип boolean, то:\n//     Если он true, вернуть строку, в которую подставлен параметр b:\n//         \"Переданное GIF-изображение анимировано и содержит [b] кадров\"\n//     Если он false, то вернуть строку:\n//         \"Переданное GIF-изображение не анимировано\"\n\n// Если первый аргумент имеет числовой тип, то вернуть строку:\n//     \"Переданное SVG-изображение содержит [a] объектов и [b * 4] атрибутов\"\n\n// Если первый аргумент массив, то вернуть строку:\n//     \"Количество красных точек во всех строчках изображения: [amountOfRedPoints]\"\n//     где [amountOfRedPoints] — это сумма значений переданного массива\n\n// Если оба аргумента массивы, то вернуть строку:\n//     \"Общая площадь артефактов сжатия: [artifactsSquare] пикселей\"\n//     где [artifactsSquare] — это сумма произведений соответствующих элементов массивов a и b,\n//     cумма произведения первого элемента a с первым элементом b, второго со вторым и так далее\n\n// Во всех иных случаях, следует вывести сообщение — \"Переданы некорректные данные\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/js/check.js\n ** module id = 0\n ** module chunks = 0\n **/"],"sourceRoot":""}